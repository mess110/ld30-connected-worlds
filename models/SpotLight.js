// Generated by CoffeeScript 1.4.0
var Spotlight;

Spotlight = (function() {

  function Spotlight(x, y, z) {
    var geometry, light;
    geometry = new THREE.CylinderGeometry(0.05, 1.25, 6, 32 * 2, 20, true);
    geometry.applyMatrix(new THREE.Matrix4().makeTranslation(0, -geometry.height / 2, 0));
    geometry.applyMatrix(new THREE.Matrix4().makeRotationX(-Math.PI / 2));
    this.material = new THREEx.VolumetricSpotLightMaterial();
    this.volumetricSpotlight = new THREE.Mesh(geometry, this.material);
    this.volumetricSpotlight.position.set(x, y, z);
    this.volumetricSpotlight.lookAt(new THREE.Vector3(0, 0, 0));
    this.material.uniforms.lightColor.value.set("white");
    this.material.uniforms.spotPosition.value = this.volumetricSpotlight.position;
    this.spotLight = new THREE.SpotLight();
    this.spotLight.position = this.volumetricSpotlight.position;
    this.spotLight.color = this.volumetricSpotlight.material.uniforms.lightColor.value;
    this.spotLight.exponent = 30;
    this.spotLight.angle = Math.PI / 3;
    this.spotLight.intensity = 4;
    light = this.spotLight;
    light.castShadow = true;
    light.shadowCameraNear = 0.01;
    light.shadowCameraFar = 15;
    light.shadowCameraFov = 45;
    light.shadowCameraLeft = -8;
    light.shadowCameraRight = 8;
    light.shadowCameraTop = 8;
    light.shadowCameraBottom = -8;
    light.shadowBias = 0.0;
    light.shadowDarkness = 0.5;
    light.shadowMapWidth = 1024;
    light.shadowMapHeight = 1024;
  }

  Spotlight.prototype.setColor = function(color) {
    return this.material.uniforms.lightColor.value.set(color);
  };

  Spotlight.prototype.distanceTo = function(node) {
    return this.spotLight.position.distanceTo(node.position);
  };

  Spotlight.prototype.lookAt = function(node) {
    var target;
    target = node.position;
    this.volumetricSpotlight.lookAt(target);
    return this.spotLight.target.position.copy(target);
  };

  return Spotlight;

})();
